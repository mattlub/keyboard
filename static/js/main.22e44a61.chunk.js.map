{"version":3,"sources":["consts.js","components/TabNavigation.js","components/Header.js","components/Key.js","components/Keyboard.js","utils.js","components/Test.js","components/Cards.js","components/Add.js","components/Help.js","localStorage.js","components/App.js","serviceWorker.js","index.js"],"names":["keyMap","q","w","e","r","t","y","u","i","o","p","[","]","a","s","d","f","g","h","j","k","l",";","z","x","c","v","b","n","m","keys","defaultWords","id","en","ar","TABS","test","cards","add","help","NAVBAR_TABS","TabNavigation","_ref","selected","handleChange","react_default","createElement","className","map","tabName","key","concat","onClick","Header","selectedTab","handleTabChange","components_TabNavigation","Key","forwardRef","ref","character","Keyboard","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","keyRefs","setRef","char","element","keypressListener","bind","assertThisInitialized","keyupListener","classList","remove","document","addEventListener","removeEventListener","components_Key","_this2","renderKey","Component","pickRandom","arr","toExclude","arguments","length","undefined","Error","Math","floor","random","filter","includes","toArabic","str","split","join","Test","state","correct","word","words","input","showAnswer","inputRef","focus","newInput","target","value","setState","setTimeout","prevState","_this3","_this4","_this$state","direction","onChange","handleInputChange","handleSkip","disabled","handleShowAnswer","src_components_Keyboard","Cards","handleDelete","INITIAL_STATE","english","arabic","isArabicInputFocused","successMessage","Add","englishInputRef","inputInArabic","preventDefault","handleAdd","objectSpread","_this$state2","onSubmit","handleFormSubmit","handleEnglishInputChange","handleArabicInputChange","onFocus","handleArabicInputFocus","onBlur","handleArabicInputBlur","type","Help","Fragment","href","getWords","JSON","parse","localStorage","getItem","setWords","setItem","stringify","App","prevProps","newTab","previousWord","slice","pop","console","log","newWord","src_components_Test","src_components_Cards","src_components_Add","components_Help","components_Header","renderContent","Boolean","window","location","hostname","match","ReactDOM","render","src_components_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.22e44a61.chunk.js","sourcesContent":["export const keyMap = {\n  'q': 'ض',\n  'w': 'ص',\n  'e': 'ث',\n  'r': 'ق',\n  't': 'ف',\n  'y': 'غ',\n  'u': 'ع',\n  'i': 'ه',\n  'o': 'خ',\n  'p': 'ح',\n  '[': 'ج',\n  ']': 'ة',\n  'a': 'ش',\n  's': 'س',\n  'd': 'ي',\n  'f': 'ب',\n  'g': 'ل',\n  'h': 'ا',\n  'j': 'ت',\n  'k': 'ن',\n  'l': 'م',\n  ';': 'ك',\n  'z': 'ظ',\n  'x': 'ط',\n  'c': 'ذ',\n  'v': 'د',\n  'b': 'ز',\n  'n': 'ر',\n  'm': 'و'\n}\n\nexport const keys = [\n  ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', '[', ']'], // 12 keys\n  ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', ';'], // 10\n  ['z', 'x', 'c', 'v', 'b', 'n', 'm'] // 7\n]\n\nexport const defaultWords = [\n  { id: -5, en: 'easy', ar: 'سهل' },\n  { id: -4, en: 'difficult', ar: 'صعب' },\n  { id: -3, en: 'important', ar: 'ضروري' },\n  { id: -2, en: 'yesterday', ar: 'مبارح' },\n  { id: -1, en: 'tomorrow', ar: 'بكرا' }\n]\n\nexport const TABS = {\n  test: 'test',\n  cards: 'cards',\n  add: 'add',\n  help: 'help'\n}\n\nexport const NAVBAR_TABS = ['test', 'cards', 'add']\n","import React from 'react'\nimport { NAVBAR_TABS } from '../consts'\n\nconst TabNavigation = ({ selected, handleChange }) => (\n  <nav className=\"nav\">\n    {NAVBAR_TABS.map(tabName => (\n      <button\n        key={tabName}\n        className={`nav__item ${tabName === selected ? 'nav__item--selected' : ''}`}\n        onClick={() => handleChange(tabName)}\n      >\n        <div className=\"nav__item-text\">\n          {tabName}\n        </div>\n      </button>\n    ))}\n  </nav>\n)\n\nexport default TabNavigation","import React from 'react'\nimport TabNavigation from './TabNavigation.js'\nimport { TABS } from '../consts'\n\nconst Header = ({ selectedTab, handleTabChange }) => (\n  <div className=\"header\">\n    <div className=\"header-content\">\n      <div className=\"tools\">\n        <button\n          onClick={() => handleTabChange(TABS.help)}\n          className=\"help-button\"\n        >\n          ?\n        </button>\n      </div>\n      <TabNavigation\n        selected={selectedTab}\n        handleChange={handleTabChange}\n      />\n    </div>\n  </div>\n)\n\nexport default Header","import React, { forwardRef } from 'react'\nimport { keyMap } from '../consts'\n\nconst Key = forwardRef(({ character }, ref) => (\n  <div className=\"key\" ref={ref}>\n    <span className=\"english-character\">\n      {character}\n    </span>\n    <span className=\"arabic-character\">\n      {keyMap[character]}\n    </span>\n  </div>\n))\n\nexport default Key","import React, { Component } from 'react'\n\nimport Key from './Key'\nimport { keys } from '../consts'\n\nimport './Keyboard.css'\n\nclass Keyboard extends Component {\n  constructor(props) {\n    super(props)\n    // contains refs for each keyboard key\n    this.keyRefs = {}\n\n    // stores the ref for each key\n    this.setRef = char => element => {\n      this.keyRefs[char] = element\n    }\n\n    this.keypressListener = this.keypressListener.bind(this)\n    this.keyupListener = this.keyupListener.bind(this)\n  }\n\n  keypressListener(e) {\n    const key = e.key\n    // add the light class then remove it, to make the key flash\n    if (this.keyRefs[key]) {\n      this.keyRefs[key].classList.add('light')\n    }\n  }\n\n  keyupListener(e) {\n    // BUG: keyup for the letter is not fired if a special key is pressed\n    const key = e.key\n    if (this.keyRefs[key]) {\n      this.keyRefs[key].classList.remove('light')\n    }\n  }\n\n  componentDidMount() {\n    document.addEventListener('keypress', this.keypressListener)\n    document.addEventListener('keyup', this.keyupListener)\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keypress', this.keypressListener)\n    document.removeEventListener('keyup', this.keyupListener)\n  }\n\n  renderKey(key) {\n    return (\n      <Key character={key} key={key} ref={this.setRef(key)} />\n    )\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"keyboard\">\n          <div className=\"keyboard-row row-1\">\n            {keys[0].map(key => this.renderKey(key))}\n          </div>\n          <div className=\"keyboard-row row-2\">\n            {keys[1].map(key => this.renderKey(key))}\n          </div>\n          <div className=\"keyboard-row row-3\">\n            {keys[2].map(key => this.renderKey(key))}\n          </div>\n        </div>\n      </div>\n    )\n  }  \n}\n\nexport default Keyboard","import { keyMap } from './consts'\n\n// random int >= 0, < n\nexport const randomInt = n => Math.floor(Math.random() * n)\n\n// pick random element from array, excluding certain elements\nexport const pickRandom = (arr, toExclude = []) => {\n  if (arr.length === 0) {\n    throw new Error('cannot pick something from empty array!')\n  }\n  if (toExclude.length === 0) {\n    return arr[randomInt(arr.length)]\n  }\n  const possibilities = arr.filter(e => !toExclude.includes(e))\n  return pickRandom(possibilities)\n}\n\nexport const toArabic = str => {\n  return str.split('').map(c => keyMap[c] || c).join('')\n}","import React, { Component } from 'react';\nimport './Test.css';\nimport Keyboard from './Keyboard.js'\nimport { pickRandom, toArabic } from '../utils';\n\nconst NEXT_WORD_DELAY = 2000\n\nclass Test extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      correct: false,\n      word: pickRandom(this.props.words),\n      input: '',\n      showAnswer: false\n    }\n    this.inputRef = null\n  }\n\n  componentDidMount() {\n    this.inputRef.focus()\n  }\n\n  handleInputChange(e) {\n    // do nothing if already correct, waiting for next word\n    if (this.state.correct) {\n      return\n    }\n    const { words } = this.props\n    const { word } = this.state\n    // target value will have the english letter added on the end\n    const newInput = toArabic(e.target.value)\n    const correct = newInput === word.ar\n    this.setState({\n      input: newInput,\n      correct\n    })\n    if (correct) {\n      setTimeout(() => {\n        this.setState(prevState => ({\n          correct: false,\n          word: pickRandom(words, [prevState.word]),\n          input: '',\n          showAnswer: false\n        }))\n      }, NEXT_WORD_DELAY)\n    }\n  }\n\n  handleSkip() {\n    this.setState(prevState => ({\n      word: pickRandom(this.props.words, [prevState.word]),\n      input: '',\n      showAnswer: false\n    }))\n  }\n\n  handleShowAnswer() {\n    this.setState({\n      showAnswer: true\n    })\n    this.inputRef.focus()\n  }\n\n  render() {\n    const { word, correct, input, showAnswer } = this.state\n    return (\n      <div>\n        <div className=\"guess-section\" >\n          <div className=\"english-word\">\n            {word.en}\n          </div>\n          <input\n            ref={e => this.inputRef = e}\n            className={`arabic-input ${correct ? 'correct' : ''}`}\n            direction=\"rtl\"\n            value={input}\n            onChange={e => this.handleInputChange(e)}\n          />\n          <div className=\"show-answer\">\n            {showAnswer && word.ar}\n          </div>\n          <div>\n            <button\n              className={`button button--not-disabled`}\n              onClick={() => this.handleSkip()}\n            >\n              Skip\n            </button>\n            <button\n              className={`button button--${showAnswer ? '' : 'not-'}disabled`}\n              disabled={showAnswer}\n              onClick={() => this.handleShowAnswer()}\n            >\n              Show Answer\n            </button>\n          </div>\n        </div>\n        <Keyboard />\n      </div>\n    );\n  }\n}\n\nexport default Test\n","import React from 'react'\nimport './Cards.css';\n\nconst Cards = ({ words, handleDelete }) => (\n  <table className=\"cards-table\">\n    <thead>\n      <tr>\n        <th className=\"en-col\">English</th>\n        <th className=\"ar-col\">Arabic</th>\n        <th></th>\n      </tr>\n    </thead>\n    <tbody>\n      {words.map(word => (\n        <tr key={word.id}>\n          <td className=\"en-col\">{word.en}</td>\n          <td className=\"ar-col\">{word.ar}</td>\n          <td>\n            <button onClick={() => handleDelete(word.id)}>\n              delete\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n)\n\nexport default Cards\n","import React, { Component } from 'react';\nimport './Add.css';\nimport Keyboard from './Keyboard.js'\nimport { toArabic } from '../utils';\n\nconst INITIAL_STATE = {\n  english: '',\n  arabic: '',\n  isArabicInputFocused: false,\n  successMessage: ''\n}\n\nclass Add extends Component {\n  constructor(props) {\n    super(props)\n    this.state = INITIAL_STATE\n    this.englishInputRef = null\n  }\n\n  handleArabicInputFocus(){\n    this.setState({\n      isArabicInputFocused: true\n    })\n  }\n\n  handleArabicInputBlur() {\n    this.setState({\n      isArabicInputFocused: false\n    })\n  }\n\n  handleEnglishInputChange(e) {\n    this.setState({\n      english: e.target.value\n    })\n  }\n\n  handleArabicInputChange(e) {\n    const inputInArabic = toArabic(e.target.value)\n    this.setState({\n      arabic: inputInArabic\n    })\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault()\n    const { handleAdd } = this.props\n    const { english, arabic } = this.state\n    const newWord = { english, arabic }\n    handleAdd(newWord)\n    this.setState({\n      ...INITIAL_STATE,\n      successMessage: 'successfully added new card!'\n    })\n    setTimeout(() => {\n      this.setState({\n        successMessage: ''\n      })\n    }, 2000)\n  }\n\n  render() {\n    const { english, arabic, isArabicInputFocused } = this.state\n    return (\n      <div className=\"add-section\" >\n        <form\n          className=\"add-form\"\n          onSubmit={e => this.handleFormSubmit(e)}\n        >\n          <label\n            className=\"add-form__field\"\n          >\n            English\n            <input\n              className=\"add-form__input\"\n              ref={e => this.englishInputRef = e}\n              value={english}\n              onChange={e => this.handleEnglishInputChange(e)}\n              />\n          </label>\n          <label\n            className=\"add-form__field\"\n          >\n            Arabic\n            <input\n              className=\"add-form__input\"\n              direction=\"rtl\"\n              value={arabic}\n              onChange={e => this.handleArabicInputChange(e)}\n              onFocus={() => this.handleArabicInputFocus()}\n              onBlur={() => this.handleArabicInputBlur()}\n              />\n          </label>\n          <button\n            disabled={!(arabic && english)}\n            className={`button button--${!(arabic && english) ? 'not' : ''}disabled add-form__submit-button`}\n            type=\"submit\"\n          >\n            Add new card\n          </button>\n          <div className=\"message\">\n            {this.state.successMessage}\n          </div>\n          { isArabicInputFocused &&\n            <Keyboard />\n          }\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Add\n","import React from 'react'\nimport './Add.css'\n\nconst Help = () => (\n  <>\n    <h2>Help</h2>\n    <p>\n      Visit the <a href=\"http://github.com/mattlub/keyboard\" target=\"_blank\">github repository</a> for this app to learn more about it.\n    </p>\n    <h3>Tabs</h3>\n    <p>\n      In the <strong>test</strong> tab, you test yourself on the vocabulary, while practising typing using an arabic keyboard layout.\n    </p>\n    <p>\n      In the <strong>cards</strong> tab, can see all the cards which you have created.\n    </p>\n    <p>\n      In the <strong>add</strong> tab, you can add new vocabulary which will then come up in the test tab.\n    </p>\n  </>\n)\n\nexport default Help\n","// will return null if not in local storage\nexport const getWords = () =>\n  JSON.parse(localStorage.getItem('words'))\n\nexport const setWords = words =>\n  localStorage.setItem('words', JSON.stringify(words))","import React, { Component } from 'react'\nimport './App.css'\nimport Header from './Header.js'\nimport Test from './Test.js'\nimport Cards from './Cards.js'\nimport Add from './Add.js'\nimport Help from './Help.js'\nimport { defaultWords, TABS } from '../consts.js'\nimport { getWords, setWords } from '../localStorage.js'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      selectedTab: TABS.test,\n      words: getWords() || defaultWords\n    }\n    this.handleTabChange = this.handleTabChange.bind(this)\n    this.handleAdd = this.handleAdd.bind(this)\n    this.handleDelete = this.handleDelete.bind(this)\n  }\n\n  componentDidMount() {\n    setWords(this.state.words)\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // only need to do if words have changed\n    setWords(this.state.words)\n  }\n\n  handleTabChange(newTab) {\n    this.setState({\n      selectedTab: newTab\n    })\n  }\n\n  handleAdd({ english, arabic }) {\n    // rudimentary id for now\n    const previousWord = this.state.words.slice().pop()\n    console.log({previousWord})\n    const newId = (previousWord && previousWord.id + 1) || 1\n    const newWord = {\n      id: newId,\n      en: english,\n      ar: arabic\n    }\n    this.setState(prevState => ({\n      words: prevState.words.concat(newWord)\n    }))\n  }\n\n  handleDelete(id) {\n    this.setState(prevState => ({\n      words: prevState.words.filter(word => word.id !== id)\n    }))\n  }\n\n  renderContent() {\n    const { selectedTab, words } = this.state\n    if (selectedTab === TABS.test) {\n      return <Test words={words}/>\n    }\n    if (selectedTab === TABS.cards) {\n      return <Cards words={words} handleDelete={this.handleDelete}/>\n    }\n    else if (selectedTab === TABS.add) {\n      return <Add handleAdd={this.handleAdd} />\n    }\n    else if (selectedTab === TABS.help) {\n      return <Help />\n    }\n    throw new Error('invalid selectedTab')\n  }\n\n  render() {\n    const { selectedTab } = this.state\n    return (\n      <div className=\"App\">\n        <Header\n          selectedTab={selectedTab}\n          handleTabChange={this.handleTabChange}\n        />\n        <div className=\"content\">\n          {this.renderContent()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './normalise.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}